
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/sparse_vector_normals.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_gallery_sparse_vector_normals.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_sparse_vector_normals.py:


A sparse model vector generator
=================================


Demonstrates how to create sparse model vectors with small number of non-zero entries sampled from Gaussian distribution

.. GENERATED FROM PYTHON SOURCE LINES 10-11

Let's import necessary libraries 

.. GENERATED FROM PYTHON SOURCE LINES 11-18

.. code-block:: default

    import matplotlib as mpl
    import matplotlib.pyplot as plt
    from jax import random
    import jax.numpy as jnp
    import cr.sparse as crs
    import cr.sparse.data as crdata








.. GENERATED FROM PYTHON SOURCE LINES 19-20

Let's define the size of model and number of sparse entries

.. GENERATED FROM PYTHON SOURCE LINES 20-26

.. code-block:: default


    # Model size
    N = 1000
    # Number of non-zero entries in the sparse model
    K = 30








.. GENERATED FROM PYTHON SOURCE LINES 27-28

Let's generate a random sparse model

.. GENERATED FROM PYTHON SOURCE LINES 28-32

.. code-block:: default

    key = random.PRNGKey(1)
    x, omega = crdata.sparse_normal_representations(key, N, K, 1)
    x = jnp.squeeze(x)








.. GENERATED FROM PYTHON SOURCE LINES 33-34

We can easily find the locations of non-zero entries

.. GENERATED FROM PYTHON SOURCE LINES 34-36

.. code-block:: default

    print(crs.nonzero_indices(x))





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    [ 45  69 114 133 159 185 199 233 259 338 348 377 393 425 490 504 521 533
     537 627 722 730 782 790 817 846 891 947 949 968]




.. GENERATED FROM PYTHON SOURCE LINES 37-38

We can  extract corresponding non-zero values in a compact vector

.. GENERATED FROM PYTHON SOURCE LINES 38-40

.. code-block:: default

    print(crs.nonzero_values(x))





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    [-0.646179   -1.2449834  -0.9160155   2.7065558   0.99159974  1.7746285
      0.87083554 -0.2891178   0.30582118 -1.0570334  -0.0385475  -2.4557261
     -0.04477301 -2.2054586  -1.8359581   1.8202773  -0.36869237 -0.54683006
     -0.82268363  1.5236913   0.24205719 -0.01583956  1.1500738  -0.00814036
     -0.69774747 -0.8854554   0.4539181   1.7888708  -0.24443637 -0.39677644]




.. GENERATED FROM PYTHON SOURCE LINES 41-42

Let's plot the vector to see where the non-zero entries are

.. GENERATED FROM PYTHON SOURCE LINES 42-44

.. code-block:: default

    plt.figure(figsize=(8,6), dpi= 100, facecolor='w', edgecolor='k')
    plt.stem(x, markerfmt='.');



.. image-sg:: /gallery/images/sphx_glr_sparse_vector_normals_001.png
   :alt: sparse vector normals
   :srcset: /gallery/images/sphx_glr_sparse_vector_normals_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    <StemContainer object of 3 artists>




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  2.034 seconds)


.. _sphx_glr_download_gallery_sparse_vector_normals.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: sparse_vector_normals.py <sparse_vector_normals.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: sparse_vector_normals.ipynb <sparse_vector_normals.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
